Is Palindrome Number?
=====================
import java.io.*;
import  java.util.*;
class UserMainCode{
public int isPalinNum(int input1){
int num=input1;
		int rev=0;
		while(num!=0)
		{
			int r=num%10;
			rev=rev*10+r;
			num=num/10;
		}
		if(input1==rev)
		{
			return 2;
		}
		else
		{
			return 1;
		}
	}
}

Is Palindrome Possible?
=======================
Create PIN using alpha, beta, gamma
===================================
import java.io.*;
import  java.util.*;
class UserMainCode{
public int createPIN(int input1,int input2,int input3){
int pin=0;
		String s1=String.valueOf(input1);
		String s2=String.valueOf(input2);
		String s3=String.valueOf(input3);
		int ip1=Integer.parseInt(String.valueOf(s1.charAt(2)));
		int ip2=Integer.parseInt(String.valueOf(s2.charAt(2)));
		int ip3=Integer.parseInt(String.valueOf(s3.charAt(2)));
		if (ip1 < ip2 && ip1 < ip3) {
			pin = ip1;
		} else if (ip2 < ip3) {
			pin = ip2;
		} else {
			pin = ip3;
		}
		 ip1=Integer.parseInt(String.valueOf(s1.charAt(1)));
		 ip2=Integer.parseInt(String.valueOf(s2.charAt(1)));
		 ip3=Integer.parseInt(String.valueOf(s3.charAt(1)));
		if (ip1 < ip2 && ip1 < ip3) {
			pin = ip1 * 10 + pin;
		} else if (ip2 < ip3) {
			pin = ip2 * 10 + pin;
		} else {
			pin = ip3 * 10 + pin;
		}
		 ip1=Integer.parseInt(String.valueOf(s1.charAt(0)));
		 ip2=Integer.parseInt(String.valueOf(s2.charAt(0)));
		 ip3=Integer.parseInt(String.valueOf(s3.charAt(0)));
        if (ip1 < ip2 && ip1 < ip3) {
			pin = ip1 * 100 + pin;
		} else if (ip2 < ip3) {
			pin = ip2 * 100 + pin;
		} else {
			pin = ip3 * 100 + pin;
		}
		
      int max= 0;
	  for (int i = 0; i < 3; i++) {
		 ip1=Integer.parseInt(String.valueOf(s1.charAt(i)));
		 ip2=Integer.parseInt(String.valueOf(s2.charAt(i)));
		 ip3=Integer.parseInt(String.valueOf(s3.charAt(i)));
		 if (ip1 > ip2 && ip1 > ip3) {
				max = ip1 > max ? ip1 : max;
			} else if (ip2 > ip3) {
				max = ip2 > max ? ip2 : max;
			} else {
				max = ip3 > max ? ip3 : max;
			}
		}
		pin = max * 1000 + pin;
		 
       return pin;


        
	
	}
}
Weight of a hill pattern
========================
import java.io.*;
import  java.util.*;
class UserMainCode{
public int totalhillweight(int input1,int input2,int input3){
int totalweight=0;
    int initweight=input2;
    for(int i=0;i<input1;i++)
    {
        for(int j=0;j<=i;j++)
        {
            totalweight= totalweight+initweight;

        }
        initweight=initweight+input3;
    }
    return  totalweight;
}
	}